=================================================================
dLNk Attack Platform - Quick Command Reference
=================================================================

คำสั่งสำหรับรันใน Codespace Terminal
Copy และ paste คำสั่งเหล่านี้ลงใน Terminal

=================================================================
1. DEPLOYMENT (รันครั้งแรก)
=================================================================

# Pull latest code from GitHub
git pull

# Run deployment script
./deploy_production.sh

=================================================================
2. START API SERVER
=================================================================

# วิธีที่ 1: ใช้ start script (แนะนำ)
./start_server.sh

# วิธีที่ 2: ใช้ CLI wrapper
./dlnk server

# วิธีที่ 3: ใช้ Python โดยตรง
export PYTHONPATH="$(pwd):$PYTHONPATH" && python3 main.py server

=================================================================
3. BUILD FRONTEND
=================================================================

# เข้าไปใน frontend directory
cd frontend

# ติดตั้ง dependencies (ครั้งแรก)
npm install

# Build production
npm run build

# Preview production build
npm run preview

# กลับไปที่ root directory
cd ..

=================================================================
4. TEST COMMANDS
=================================================================

# ทดสอบ API endpoints
python3 test_api_fixed.py

# ดู CLI commands ทั้งหมด
./dlnk --help

# ดู agents ทั้งหมด
./dlnk agents

# ทดสอบ agent เดี่ยว (ใช้ safe test target)
./dlnk agent sqlmap_agent scan --url https://testphp.vulnweb.com

=================================================================
5. USEFUL COMMANDS
=================================================================

# ดู running processes
ps aux | grep python

# ดู ports ที่ใช้
netstat -tuln | grep LISTEN

# Kill process บน port 8000
lsof -i :8000
kill -9 <PID>

# ดู logs (ถ้ามี)
tail -f logs/api.log

# ตรวจสอบ disk space
df -h

# ตรวจสอบ memory
free -h

=================================================================
6. GIT COMMANDS
=================================================================

# Pull latest changes
git pull

# Check status
git status

# Add all changes
git add .

# Commit
git commit -m "Your message"

# Push
git push

=================================================================
7. ENVIRONMENT SETUP
=================================================================

# แก้ไข .env file
nano .env
# หรือ
code .env

# ตั้ง PYTHONPATH
export PYTHONPATH="$(pwd):$PYTHONPATH"

# ตรวจสอบ environment variables
env | grep -i dlnk

=================================================================
8. DATABASE COMMANDS
=================================================================

# Initialize database
python3 startup.py

# ลบ database และสร้างใหม่
rm workspace/dlnk.db
python3 startup.py

# เข้าสู่ SQLite shell
sqlite3 workspace/dlnk.db

# ใน SQLite shell:
.tables
SELECT * FROM users;
.quit

=================================================================
9. DOCKER COMMANDS (ถ้าใช้)
=================================================================

# Start all services
docker compose -f docker-compose.complete.yml up -d

# ดู logs
docker compose -f docker-compose.complete.yml logs -f

# Stop services
docker compose -f docker-compose.complete.yml down

# ดู running containers
docker ps

=================================================================
10. TROUBLESHOOTING
=================================================================

# ถ้า port 8000 ถูกใช้:
lsof -i :8000
kill -9 <PID>

# ถ้า module not found:
pip3 install -r requirements.txt
export PYTHONPATH="$(pwd):$PYTHONPATH"

# ถ้า permission denied:
chmod +x deploy_production.sh
chmod +x start_server.sh
chmod +x dlnk

# ถ้า frontend build failed:
cd frontend
rm -rf node_modules package-lock.json
npm install
npm run build

=================================================================
QUICK START SEQUENCE (สำหรับครั้งแรก)
=================================================================

# 1. Pull latest code
git pull

# 2. Deploy
./deploy_production.sh

# 3. Start API server
./start_server.sh

# 4. (Terminal ใหม่) Build frontend
cd frontend && npm install && npm run build && npm run preview

=================================================================
API ENDPOINTS
=================================================================

API Server: http://localhost:8000
API Docs: http://localhost:8000/docs
Health Check: http://localhost:8000/health

Frontend: http://localhost:3000

=================================================================
IMPORTANT NOTES
=================================================================

1. ใช้ SQLite สำหรับ Codespace (ไม่ต้องติดตั้ง PostgreSQL)
2. Codespace จะ forward ports อัตโนมัติ
3. ดู PORTS tab ใน VS Code เพื่อเปิด URLs
4. Admin API Key จะอยู่ใน workspace/ADMIN_KEY.txt
5. แก้ไข .env file ก่อนใช้งาน production

=================================================================
DOCUMENTATION
=================================================================

CODESPACE_SETUP.md - คู่มือ setup ใน Codespace
FRONTEND_DEPLOYMENT.md - คู่มือ frontend deployment
POSTGRESQL_SETUP.md - คู่มือ PostgreSQL setup
TESTING_GUIDE.md - คู่มือการทดสอบ
DOCKER_DEPLOYMENT.md - คู่มือ Docker deployment
DEVELOPMENT_SUMMARY.md - สรุปการพัฒนา

=================================================================

